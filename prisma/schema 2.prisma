// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Core business entities
model Business {
  id         String   @id @default(uuid())
  domain     String   @unique
  name       String
  email      String?
  reportData Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  utmTokens      UtmToken[]
  purchases      Purchase[]
  abandonedCarts AbandonedCart[]
  
  @@map("businesses")
}

// Waitlist entries
model WaitlistEntry {
  id           String   @id @default(uuid())
  domain       String
  email        String
  ipLocation   Json?
  variantData  Json?
  position     Int      @default(autoincrement())
  createdAt    DateTime @default(now())
  
  @@index([domain])
  @@index([createdAt])
  @@map("waitlist")
}

// UTM tracking
model UtmToken {
  nonce      String    @id
  token      String    @unique
  businessId String
  business   Business  @relation(fields: [businessId], references: [id])
  used       Boolean   @default(false)
  usedAt     DateTime?
  createdAt  DateTime  @default(now())
  expiresAt  DateTime
  
  @@index([token])
  @@index([expiresAt])
  @@map("utm_tokens")
}

// Purchase records
model Purchase {
  id                    String    @id @default(uuid())
  businessId            String
  business              Business  @relation(fields: [businessId], references: [id])
  stripeSessionId       String?   @unique
  stripePaymentIntentId String?   @unique
  utmToken              String?
  amount                Int       // Amount in cents
  currency              String    @default("usd")
  customerEmail         String?
  status                String    // pending, completed, failed
  metadata              Json?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  
  @@index([stripeSessionId])
  @@index([stripePaymentIntentId])
  @@index([status])
  @@map("purchases")
}

// Analytics events
model AnalyticsEvent {
  id         String   @id @default(uuid())
  eventName  String
  properties Json
  sessionId  String?
  createdAt  DateTime @default(now())
  
  @@index([eventName, sessionId])
  @@index([createdAt])
  @@map("analytics_events")
}

// Abandoned cart tracking
model AbandonedCart {
  id                String    @id @default(uuid())
  stripeSessionId   String    @unique
  businessId        String
  business          Business  @relation(fields: [businessId], references: [id])
  utmToken          String?
  customerEmail     String?
  amount            Int       // Amount in cents
  currency          String    @default("usd")
  recoveryToken     String?   @unique
  recoveryEmailSent Boolean   @default(false)
  emailSentAt       DateTime?
  recovered         Boolean   @default(false)
  recoveredAt       DateTime?
  sessionExpiresAt  DateTime
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@index([stripeSessionId])
  @@index([recoveryToken])
  @@index([emailSentAt])
  @@index([sessionExpiresAt])
  @@index([createdAt])
  @@map("abandoned_carts")
}